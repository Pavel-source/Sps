-- WITH cte_GrouppedByOrderLine
SELECT 
	o.ID AS ORDER_ID,
	CAST(o.CREATED AS DATE) AS ORDER_DATE,
	o.CREATED AS ORDER_DATE_TIME,
	HOUR(o.CREATED) AS ORDER_HOUR_ONLY,
	MINUTE(o.CREATED) AS ORDER_MINUTE_ONLY,
	o.CUSTOMERID AS CUSTOMER_ID,
	'NL' AS ORDER_COUNTRY_CODE	,
	'Netherlands' AS ORDER_COUNTRY	,
	'NL' AS ORDER_STORE	,
	NULL AS	PLATFORM	,										-- to do later
	concat('LEGO-', o.ORDERCODE) AS	ORDER_NUMBER	,
	IFF(o.currentorderstate = 'CANCELLED', 'Cancelled', 'Confirmed') AS	ORDER_STATE	,
	sum(case when ol.packettoselfid IS NULL then 1 else 0 end)  AS not_toself_count	,
	sum(case when ol.packettoselfid IS NOT NULL then 1 else 0 end)  AS toself_count	,
	--	NUMBER_OF_ADDRESSES	,
	case 
		when not_toself_count > 0 AND toself_count = 0 then 'DIRECT'
		when not_toself_count = 0 AND toself_count > 0 then 'CUSTOMER'
		when not_toself_count > 0 AND toself_count > 0 then 'SPLIT'
	end 	AS ORDER_ADDRESS_TYPE	,
	--	SINGLE_ADDRESS_FLAG	,
	'LineItemLevel' AS ORDER_TAX_CALCULATION	,
	True AS ORDER_TRANSACTION_FEE	,
	COUNT(*) ITEMS_IN_ORDER	,						-- ?
	o.currencycode AS ORDER_CURRENCYCODE	,
	TO_GBP_RATE	= ex.avg_rate,
	MNTH_GBP_TO_EUR_RATE = ex_2.avg_rate,
	abs(sum(case when gpv.productcode != 'shipment_generic' then ol.DISCOUNTWITHOUTVAT else 0 end))  AS PRODUCT_DISCOUNT_EX_TAX	,
	abs(sum(case when gpv.productcode != 'shipment_generic' then ol.DISCOUNTWITHVAT - ol.DISCOUNTWITHOUTVAT else 0 end))  AS PRODUCT_DISCOUNT_TAX	,
	abs(sum(case when gpv.productcode != 'shipment_generic' then ol.DISCOUNTWITHVAT else 0 end))  AS PRODUCT_DISCOUNT_INC_TAX	,
	abs(sum(case when gpv.productcode = 'shipment_generic' then ol.DISCOUNTWITHOUTVAT else 0 end))  AS POSTAGE_DISCOUNT_EX_TAX	,
	abs(sum(case when gpv.productcode = 'shipment_generic' then ol.DISCOUNTWITHVAT - ol.DISCOUNTWITHOUTVAT else 0 end))  AS POSTAGE_DISCOUNT_TAX	,
	abs(sum(case when gpv.productcode = 'shipment_generic' then ol.DISCOUNTWITHVAT else 0 end))  AS POSTAGE_DISCOUNT_INC_TAX	,
	
	abs(sum(case when gpv.productcode != 'shipment_generic' then ex.avg_rate * ol.DISCOUNTWITHOUTVAT else 0 end))  AS PRODUCT_DISCOUNT_EX_TAX_GBP	,
	abs(sum(case when gpv.productcode != 'shipment_generic' then ex.avg_rate * (ol.DISCOUNTWITHVAT - ol.DISCOUNTWITHOUTVAT) else 0 end))  AS PRODUCT_DISCOUNT_TAX_GBP	,
	abs(sum(case when gpv.productcode != 'shipment_generic' then ex.avg_rate * ol.DISCOUNTWITHVAT else 0 end))  AS PRODUCT_DISCOUNT_INC_TAX_GBP	,
	abs(sum(case when gpv.productcode = 'shipment_generic' then ex.avg_rate * ol.DISCOUNTWITHOUTVAT else 0 end))  AS POSTAGE_DISCOUNT_EX_TAX_GBP	,
	abs(sum(case when gpv.productcode = 'shipment_generic' then ex.avg_rate * (ol.DISCOUNTWITHVAT - ol.DISCOUNTWITHOUTVAT) else 0 end))  AS POSTAGE_DISCOUNT_TAX_GBP	,
	abs(sum(case when gpv.productcode = 'shipment_generic' then ex.avg_rate * ol.DISCOUNTWITHVAT else 0 end))  AS POSTAGE_DISCOUNT_INC_TAX_GBP	,
	NULL AS	PRODUCT_UNIT_PRICE	,					-- to do later
	
	sum(case when gpv.productcode != 'shipment_generic' then ol.TOTALWITHOUTVAT else 0 end) AS ORDER_ESEV	,
	NULL  AS POSTAGE_UNIT_PRICE	, 		-- later
	abs(sum(case when gpv.productcode = 'shipment_generic' then ol.TOTALWITHOUTVAT else 0 end))  AS POSTAGE_EX_TAX	,
	-- PRODUCT_LINE_TAX = PRODUCT_TOTAL_TAX + PRODUCT_DISCOUNT_TAX
	sum(case when gpv.productcode != 'shipment_generic' then ol.TOTALWITHOUTVAT - ol.TOTALWITHVAT + abs(ol.DISCOUNTWITHVAT - ol.DISCOUNTWITHOUTVAT) else 0 end)  AS PRODUCT_LINE_TAX	,
	sum(case when gpv.productcode != 'shipment_generic' then ol.TOTALWITHVAT - ol.TOTALWITHOUTVAT else 0 end) AS PRODUCT_TOTAL_TAX	,
	sum(case when gpv.productcode != 'shipment_generic' then ol.TOTALWITHVAT else 0 end) AS ORDER_ESIV	,
	-- POSTAGE_LINE_TAX = POSTAGE_TOTAL_TAX + POSTAGE_DISCOUNT_TAX
	sum(case when gpv.productcode = 'shipment_generic' then ol.TOTALWITHVAT - ol.TOTALWITHOUTVAT + abs(ol.DISCOUNTWITHVAT - ol.DISCOUNTWITHOUTVAT) else 0 end) AS POSTAGE_LINE_TAX	,
	sum(case when gpv.productcode = 'shipment_generic' then ol.TOTALWITHVAT - ol.TOTALWITHOUTVAT else 0 end) AS POSTAGE_TOTAL_TAX	,
	-- POSTAGE_SUBTOTAL = POSTAGE_EX_TAX + POSTAGE_TOTAL_TAX
	sum(case when gpv.productcode = 'shipment_generic' then /*ol.TOTALWITHOUTVAT +*/ ol.TOTALWITHVAT /*- ol.TOTALWITHOUTVAT*/ else 0 end) AS POSTAGE_SUBTOTAL	,
	sum(ol.TOTALWITHOUTVAT) AS ORDER_ISEV	,
	abs(sum(case when o.productcode != 'shipment_generic' then o.DISCOUNTWITHVAT else 0 end)) AS TOTAL_DISCOUNT	,
	sum(ol.TOTALWITHVAT - ol.TOTALWITHOUTVAT) AS TOTAL_TAX	,
	sum(ol.TOTALWITHVAT) AS ORDER_ISIV	,
	sum(ol.TOTALWITHVAT) ORDER_CASH_PAID	,
--	PRODUCT_UNIT_PRICE_GBP	,
	sum(case when gpv.productcode != 'shipment_generic' then ex.avg_rate * ol.TOTALWITHOUTVAT else 0 end)  AS ORDER_ESEV_GBP	,
--	POSTAGE_UNIT_PRICE_GBP	,
	abs(sum(case when gpv.productcode = 'shipment_generic' then ex.avg_rate * ol.TOTALWITHOUTVAT else 0 end))  AS POSTAGE_EX_TAX_GBP	,
	sum(case when gpv.productcode != 'shipment_generic' then ex.avg_rate * (ol.TOTALWITHOUTVAT - ol.TOTALWITHVAT + abs(ol.DISCOUNTWITHVAT - ol.DISCOUNTWITHOUTVAT)) else 0 end)  AS PRODUCT_LINE_TAX_GBP	,
	sum(case when gpv.productcode != 'shipment_generic' then ex.avg_rate * (ol.TOTALWITHVAT - ol.TOTALWITHOUTVAT) else 0 end)  AS PRODUCT_TOTAL_TAX_GBP	,
	sum(case when gpv.productcode != 'shipment_generic' then ex.avg_rate * ol.TOTALWITHVAT else 0 end)  AS ORDER_ESIV_GBP	,
	sum(case when gpv.productcode = 'shipment_generic' then ex.avg_rate * (ol.TOTALWITHVAT - ol.TOTALWITHOUTVAT + abs(ol.DISCOUNTWITHVAT - ol.DISCOUNTWITHOUTVAT)) else 0 end)  AS POSTAGE_LINE_TAX_GBP	,
	sum(case when gpv.productcode = 'shipment_generic' then ex.avg_rate * (ol.TOTALWITHVAT - ol.TOTALWITHOUTVAT) else 0 end)  AS POSTAGE_TOTAL_TAX_GBP	,
	sum(case when gpv.productcode = 'shipment_generic' then ex.avg_rate * ( /*ol.TOTALWITHOUTVAT +*/ ol.TOTALWITHVAT /*- ol.TOTALWITHOUTVAT*/) else 0 end) AS POSTAGE_SUBTOTAL_GBP	,
	sum(ex.avg_rate * ol.TOTALWITHOUTVAT)  AS ORDER_ISEV_GBP	,
	abs(sum(case when o.productcode != 'shipment_generic' then ex.avg_rate * o.DISCOUNTWITHVAT else 0 end))  AS TOTAL_DISCOUNT_GBP	,
	sum(ex.avg_rate * (ol.TOTALWITHVAT - ol.TOTALWITHOUTVAT))  AS TOTAL_TAX_GBP	,
	sum(ex.avg_rate * ol.TOTALWITHVAT)  AS ORDER_ISIV_GBP	,
	sum(ex.avg_rate * ol.TOTALWITHVAT) AS ORDER_CASH_PAID_GBP	,
	GROSS_PRODUCT_MARGIN	,
	GROSS_SHIPPING_MARGIN	,
	TOTAL_GROSS_MARGIN	,
	COMMERCIAL_PRODUCT_MARGIN	,
	COMMERCIAL_SHIPPING_MARGIN	,
	TOTAL_COMMERCIAL_MARGIN	,
	TOTAL_SALES	,
	PRODUCT_SALES	,
	SHIPPING_SALES	,
	CUSTOMER_SERVICE	,
	CUSTOMER_SERVICE_GBP	,
	EVE_ORDER_TOTAL_AMOUNT	,
	EVE_ORDER_TOTAL_GROSS	,
	EVE_ORDER_TOTAL_NET	,
	EVE_TOTAL_POSTAGE	,
	EVE_TOTAL_LINE_ITEM	,
	DIFF_TOTAL_GROSS	,
	DIFF_PRODUCT_SUBTOTAL	,
	DIFF_POSTAGE_SUBTOTAL	,
	
	SUM(IFF(p.TYPE = 'productCardSingle', 1, 0))  AS cards,
	SUM(IFF(p.TYPE IN ('standardGift', 'personalizedGift'), 1, 0))  AS gifts,
	SUM(IFF(gpv.productTypeKey = 'flower', 1, 0))  AS flowers,
	
	IFF(cards > 0, True, False)  AS IS_CARD_ORDER	,
	IFF(gifts > 0, True, False)  AS IS_GIFT_ORDER	,
	IFF(flowers > 0, True, False)  AS IS_FLOWER_ORDER	,
	IS_CARD_UPSELL_ORDER	,
	IS_FLOWER_UPSELL_ORDER	,
	IS_UPSELL_ORDER	,
	IS_ECARD_ORDER	,
	IFF(cards > 0 AND flowers > 0, True, False)  AS IS_CARD_FLOWER_ORDER	,
	IS_ATTACH_ORDER	,
	IFF(gifts > 0 OR flowers > 0, True, False)  AS IS_GIFT_OR_FLOWER_ORDER	,
	IS_GIFT_ATTACH_ORDER	,
	IS_FLOWER_ATTACH_ORDER	,
	IS_LARGE_FLOWER_ATTACH_ORDER	,
	IFF(cards > 0 AND gifts = 0 AND flowers = 0, True, False)  AS IS_CARD_ONLY_ORDER	,
	IFF(cards = 0 AND gifts = 0 AND flowers > 0, True, False)  AS IS_FLOWER_ONLY_ORDER	,
	IFF(cards = 0 AND gifts > 0 AND flowers = 0, True, False)  AS IS_GIFT_ONLY_ORDER	,
	IFF(cards = 0 AND (gifts > 0 OR flowers > 0), True, False)  AS IS_FLOWER_OR_GIFT_ONLY_ORDER	,
	IFF(cards = 0, True, False)  AS IS_NON_CARD_ORDER	,
	IS_MULTI_CARD_ORDER	,
	IS_XSELL_ORDER	,
	IS_FLOWER_XSELL_ORDER	,
	IS_GIFT_XSELL_ORDER	,
	IFF(TOTAL_DISCOUNT > 0, True, False)  AS IS_DISCOUNTED_ORDER	,
	IFF(gifts > 0, True, False)  AS IS_CARD_DISCOUNTED_ORDER	,
	IFF(gifts > 0, True, False)  AS IS_GIFT_DISCOUNTED_ORDER	,
	IFF(gifts > 0, True, False)  AS IS_FLOWER_DISCOUNTED_ORDER	,
	IFF(gifts > 0, True, False)  AS IS_NON_CARD_DISCOUNTED_ORDER	,
	IFF(gifts > 0, True, False)  AS IS_PHOTO_UPLOAD_ORDER	,
	IS_LOW_EFFORT_ORDER	,
	IS_HIGH_EFFORT_ORDER	,
	IS_LOW_EFFORT_CARD_ORDER	,
	IS_HIGH_EFFORT_CARD_ORDER	,
	IFF(gifts > 0, True, False)  AS IS_CUSTOMER_ADDRESS_TYPE_ORDER_ONLY	,
	IFF(gifts > 0, True, False)  AS IS_DIRECT_ADDRESS_TYPE_ORDER_ONLY	,
	IS_EMAIL_ADDRESS_TYPE_ORDER_ONLY	,
	IFF(gifts > 0, True, False)  AS IS_SPLIT_ADDRESS_TYPE_ORDER	,
	IS_SPLIT_EMAIL_ADDRESS_TYPE_ORDER	,
	CARD_QUANTITY	,
	GIFT_QUANTITY	,
	FLOWER_QUANTITY	,
	CARD_FLOWER_QUANTITY	,
	CARD_QUANTITY_BANDS	,
	CARD_UPSELL_QUANTITY	,
	FLOWER_UPSELL_QUANTITY	,
	TOTAL_UPSELL_QUANTITY	,
	ECARD_QUANTITY	,
	PHYSICAL_CARD_QUANTITY	,
	GIANT_CARD_QUANTITY	,
	LARGE_CARD_QUANTITY	,
	LARGE_SQUARE_CARD_QUANTITY	,
	STANDARD_SQUARE_CARD_QUANTITY	,
	STANDARD_CARD_QUANTITY	,
	POSTCARD_QUANTITY	,
	NON_CARD_VOLUME	,
	NON_CARD_SALES	,
	CARD_ITEMS_ISEV_GBP	,
	GIFT_ITEMS_ISEV_GBP	,
	FLOWER_ITEMS_ISEV_GBP	,
	CARD_DISTINCT_PRODUCTS	,
	MULTI_CARD_SKU_ORDER	,
	MULTI_CARD_VOLUME	,
	MULTI_CARD_SALES	,
	CARD_ONLY_VOLUME	,
	CARD_ONLY_SALES	,
	GIFT_ONLY_VOLUME	,
	GIFT_ONLY_SALES	,
	FLOWER_ONLY_VOLUME	,
	FLOWER_ONLY_SALES	,
	ATTACH_VOLUME_TOTAL_ITEMS	,
	ATTACH_SALES_TOTAL_ITEMS	,
	ATTACH_VOLUME_ATTACHED_ITEMS	,
	ATTACH_SALES_ATTACHED_ITEMS	,
	CARD_ATTACH_VOLUME_CARD_ITEMS	,
	CARD_ATTACH_SALES_CARD_ITEMS	,
	GIFT_ATTACH_VOLUME_TOTAL_ITEMS	,
	GIFT_ATTACH_SALES_TOTAL_ITEMS	,
	GIFT_ATTACH_VOLUME_GIFT_ITEMS	,
	GIFT_ATTACH_SALES_GIFT_ITEMS	,
	FLOWER_ATTACH_VOLUME_TOTAL_ITEMS	,
	FLOWER_ATTACH_SALES_TOTAL_ITEMS	,
	FLOWER_ATTACH_VOLUME_FLOWER_ITEMS	,
	FLOWER_ATTACH_SALES_FLOWER_ITEMS	,
	XSELL_SALES_TOTAL_ITEMS	,
	XSELL_VOLUME_TOTAL_ITEMS	,
	FLOWER_XSELL_SALES	,
	GIFT_XSELL_SALES	,
	DISCOUNTED_VOLUME	,
	CARD_DISCOUNTED_VOLUME	,
	GIFT_DISCOUNTED_VOLUME	,
	FLOWER_DISCOUNTED_VOLUME	,
	NON_CARD_DISCOUNTED_VOLUME	,
	DISCOUNTED_SALES	,
	CARD_DISCOUNTED_SALES	,
	GIFT_DISCOUNTED_SALES	,
	FLOWER_DISCOUNTED_SALES	,
	NON_CARD_DISCOUNTED_SALES	,
	LOW_EFFORT_ITEMS	,
	HIGH_EFFORT_ITEMS	,
	LOW_EFFORT_CARD_ITEMS	,
	HIGH_EFFORT_CARD_ITEMS	,
	IS_MEMBERSHIP_ORDER	,
	IS_MEMBERSHIP_SIGNUP_ORDER	,
	MEMBERSHIP_SIGNUP_DATETIME	,
	MEMBERSHIP_VERSION	,
	MCD_ORDER_ID	,
	MCD_ENCRYPTED_ORDER_ID	,
	MCD_CUSTOMER_ID	,
	BRAND	,
	MESSAGE_TIMESTAMP	,
	IMPORT_DATETIME	,
	SOURCE_DATA	,
	DBT_MODEL_NAME	,
	DBT_INVOCATION_ID	,
	DBT_JOB_STARTED_AT	

FROM
--	(SELECT * FROM orders WHERE ordercode = '1-4RKXKMFYL1' /*id = 1337079006*/ ORDER BY id DESC LIMIT 1000) o
    "RAW_GREETZ"."GREETZ3".orders o
    INNER JOIN "RAW_GREETZ"."GREETZ3".orderline AS ol 
		ON o.id = ol.orderid
	LEFT JOIN PROD.dw_lookup.exchange_rate_history AS ex
		ON ex.month = concat(year(o.CREATED), iff(month(o.CREATED) < 10, '0',''), month(o.CREATED))
			AND ex.local_currency = 'EUR'
			AND ex.destination_currency = 'GBP'
	LEFT JOIN PROD.dw_lookup.exchange_rate_history AS ex_2
		ON ex_2.month = concat(year(o.CREATED), iff(month(o.CREATED) < 10, '0',''), month(o.CREATED))
			AND ex_2.local_currency = 'GBP'
			AND ex_2.destination_currency = 'EUR'
	LEFT JOIN "RAW_GREETZ"."GREETZ3".productiteminbasket pib 
		ON pib.ID = ol.PRODUCTITEMINBASKETID
	LEFT JOIN "RAW_GREETZ"."GREETZ3".customercreatedcard c 
		ON pib.CONTENTSELECTIONID = c.ID
	LEFT JOIN "RAW_GREETZ"."GREETZ3".tmp_dm_gift_product_variants gpv 
		ON (gpv.designId = c.carddefinition AND gpv.product_id = ol.productid AND gpv.type = 'personalizedGift')
		   OR (gpv.product_id = ol.productid AND c.carddefinition  IS NULL)		
		   OR (gpv.product_id = ol.productid AND c.carddefinition IS NOT NULL  AND gpv.designId  IS NULL)
	LEFT JOIN "RAW_GREETZ"."GREETZ3".product AS p
		ON ol.productid = p.ID
			
GROUP BY 
	o.ID
	
